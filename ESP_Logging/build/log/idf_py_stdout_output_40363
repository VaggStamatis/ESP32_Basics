[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/orion/Documents/projects/espProjects/ESP_Logging/build/bootloader/esp-idf/esptool_py && /home/orion/esp/esp-idf/tools/python_env/idf5.1_py3.10_env/bin/python /home/orion/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/orion/Documents/projects/espProjects/ESP_Logging/build/bootloader/bootloader.bin
Bootloader binary size 0x67e0 bytes. 0x820 bytes (7%) free.
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable ESP_Logging.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/orion/Documents/projects/espProjects/ESP_Logging/build/ESP_Logging.bin
[7/8] cd /home/orion/Documents/projects/espProjects/ESP_Logging/build/esp-idf/esptool_py && /home/orion/esp/esp-idf/tools/python_env/idf5.1_py3.10_env/bin/python /home/orion/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/orion/Documents/projects/espProjects/ESP_Logging/build/partition_table/partition-table.bin /home/orion/Documents/projects/espProjects/ESP_Logging/build/ESP_Logging.bin
ESP_Logging.bin binary size 0x2f1f0 bytes. Smallest app partition is 0x100000 bytes. 0xd0e10 bytes (82%) free.
[7/8] cd /home/orion/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/orion/esp/esp-idf -D "SERIAL_TOOL=/home/orion/esp/esp-idf/tools/python_env/idf5.1_py3.10_env/bin/python;;/home/orion/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/orion/Documents/projects/espProjects/ESP_Logging/build -P /home/orion/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 ESP_Logging.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ac:67:b2:34:b6:c4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26592 bytes to 16622...
Writing at 0x00001000... (50 %)
Writing at 0x000076a0... (100 %)
Wrote 26592 bytes (16622 compressed) at 0x00001000 in 0.8 seconds (effective 255.9 kbit/s)...
Hash of data verified.
Compressed 193008 bytes to 102242...
Writing at 0x00010000... (14 %)
Writing at 0x0001c670... (28 %)
Writing at 0x00021f31... (42 %)
Writing at 0x000276c6... (57 %)
Writing at 0x000300ec... (71 %)
Writing at 0x00037ebf... (85 %)
Writing at 0x0003da4a... (100 %)
Wrote 193008 bytes (102242 compressed) at 0x00010000 in 2.4 seconds (effective 631.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 351.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
